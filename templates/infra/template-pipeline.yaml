Description:
  Deploys a CI/CD pipeline.

Parameters:
  AdminPrincipalArn:
    Description: |
      This Arns of AWS principals/users/roles that will be able to access the default KMS key on this
      project and handle sensitive data such as encrypted S3 bucket files.
    Type: CommaDelimitedList

  Domain:
    Description: Your domain. This field is used to create DNS records in Route53.
    Type: String

  GitHubOrganization:
    Description: The github account owner / organization associated with your repo.
    Type: String

  GitHubRepo:
    Description: The github repo associated with this pipeline.
    Type: String

  InfraGitBranch:
    Description: The git branch associated with this pipeline.
    Type: String
    Default: master

  DashCaseProjectName:
    Description: The project name in hyphen-case.
    Type: String

  TitleCaseProjectName:
    Description: The project name in TitleCase.
    Type: String

  GitHubToken:
    Description: |
      The SSM Parameter Store 'VALUE' where your GitHub personal access token is stored.
      This is used by the CodePipeline source configuration. It contains the actual token.
      It should usually be /account/..., even for pipeline templates in other git repos
      because we'd like to reuse the same personal access token across all projects in this
      AWS account.
    Type: AWS::SSM::Parameter::Value<String>
    Default: /account/github/personal-access-token

  GitHubTokenSSMPath:
    Description: |
      The SSM Parameter Store location/key of your GitHub personal access
      token. This token is used to create/destory webhooks and make
      various GitHub API calls. By default, all projects in your AWS account
      share the same personal access token, located at this path. The value
      can be overridden to '/your-project-name/github-personal-access-token'.
    Type: String
    Default: /account/github/personal-access-token

  GitHubWebhookSecretSSMPath:
    Description: |
      The SSM Parameter Store location of your shared GitHub webhook
      secret. The value/secret stored at this location is automatically
      generated by the 'github_webhook_create' lambda function and is automatically
      stored in both GitHub and SSM Parameter Store to authorize webhooks. You
      do not generate this secret, it is generate automatically.
    Type: String

  PullRequestNumber:
    Description: (Optional) GitHub pull request number if this pipeline was created
      from a pull request. Usually a the GitHub Lambda webhook handler will set this
      parameter.
    Type: String
    Default: ''

  ECSTemplatePath:
    Description: The location of the ECS templates directory relative to git repo root directory.
    Type: String
    Default: "templates/infra/ecs"

  InfraTemplatePath:
    Description: The location of the infrastructure templates directory relative to git repo root directory.
    Type: String
    Default: "templates/infra"

Conditions:
  IsMasterBranch: !Equals [!Ref InfraGitBranch, master]
  HasPullRequestNumber: !Not [!Equals [!Ref PullRequestNumber, '']]

Resources:
  CloudFormationProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspecs/infra/buildspec-cloudformation.yaml
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        ImagePullCredentialsType: CODEBUILD
        EnvironmentVariables:
          # Common Environment Variables
        - Name: ADMIN_PRINCIPAL_ARN
          Value: !Join [',', !Ref AdminPrincipalArn]
        - Name: AWS_DEFAULT_REGION
          Value: !Ref AWS::Region
        - Name: DOMAIN
          Value: !Ref Domain
        - Name: ECR
          Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com
        - Name: PIPELINE_NAME
          Value: !Sub ${AWS::StackName}
          # Git and GitHub Environment Variables
        - Name: GIT_BRANCH
          Value: !Ref InfraGitBranch
        - Name: SOURCE_BRANCH # This branch will be different for non-infrastructure (application) builds.
          Value: !Ref InfraGitBranch
        - Name: GITHUB_ORGANIZATION
          Value: !Ref GitHubOrganization
        - Name: GITHUB_REPO
          Value: !Ref GitHubRepo
        - Name: GITHUB_TOKEN_SSM_PATH
          Value: !Ref GitHubTokenSSMPath
        - Name: GITHUB_WEBHOOK_SECRET_SSM_PATH
          Value: !Ref GitHubWebhookSecretSSMPath
          # Project Environment Variables
        - Name: DASH_CASE_PROJECT_NAME
          Value: !Ref DashCaseProjectName
        - Name: TITLE_CASE_PROJECT_NAME
          Value: !Ref TitleCaseProjectName
          # S3 Bucket Environment Variables
        - Name: LAMBDA_BUCKET_NAME
          Value: !Sub ${AWS::AccountId}-${DashCaseProjectName}-lambda-functions
        - Name: TEMPLATE_BUCKET
          Value: !Sub ${AWS::AccountId}-${DashCaseProjectName}-templates
          # File Path Environment Variables
        - Name: PIPELINE_TEMPLATE_PATH
          Value: templates/infra/template-pipeline.yaml
          # Pull Request Environment Variables
        - !If
          - HasPullRequestNumber
          - Name: PULL_REQUEST_NUMBER
            Value: !Ref PullRequestNumber
          - !Ref 'AWS::NoValue'
        - !If
          - HasPullRequestNumber
          - Name: PULL_REQUEST_DOMAIN
            Value: !Ref Domain
          - !Ref 'AWS::NoValue'
      Name: !Sub "${AWS::StackName}-cloudformation"
      TimeoutInMinutes: 5
      ServiceRole: !Sub ${DashCaseProjectName}-role-codebuild

  DockerInfraProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspecs/infra/buildspec-docker-infra.yaml
      Environment:
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true
        ImagePullCredentialsType: CODEBUILD
        EnvironmentVariables:
          # Common Environment Variables
        - Name: ADMIN_PRINCIPAL_ARN
          Value: !Join [',', !Ref AdminPrincipalArn]
        - Name: AWS_DEFAULT_REGION
          Value: !Ref AWS::Region
        - Name: DOMAIN
          Value: !Ref Domain
        - Name: ECR
          Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com
        - Name: PIPELINE_NAME
          Value: !Sub ${AWS::StackName}
          # Git and GitHub Environment Variables
        - Name: GIT_BRANCH
          Value: !Ref InfraGitBranch
        - Name: SOURCE_BRANCH # This branch will be different for non-infrastructure (application) builds.
          Value: !Ref InfraGitBranch
        - Name: GITHUB_ORGANIZATION
          Value: !Ref GitHubOrganization
        - Name: GITHUB_REPO
          Value: !Ref GitHubRepo
        - Name: GITHUB_TOKEN_SSM_PATH
          Value: !Ref GitHubTokenSSMPath
        - Name: GITHUB_WEBHOOK_SECRET_SSM_PATH
          Value: !Ref GitHubWebhookSecretSSMPath
          # Project Environment Variables
        - Name: DASH_CASE_PROJECT_NAME
          Value: !Ref DashCaseProjectName
        - Name: TITLE_CASE_PROJECT_NAME
          Value: !Ref TitleCaseProjectName
          # S3 Bucket Environment Variables
        - Name: LAMBDA_BUCKET_NAME
          Value: !Sub ${AWS::AccountId}-${DashCaseProjectName}-lambda-functions
        - Name: TEMPLATE_BUCKET
          Value: !Sub ${AWS::AccountId}-${DashCaseProjectName}-templates
          # File Path Environment Variables
        - Name: PIPELINE_TEMPLATE_PATH
          Value: templates/infra/template-pipeline.yaml
          # Pull Request Environment Variables
        - !If
          - HasPullRequestNumber
          - Name: PULL_REQUEST_NUMBER
            Value: !Ref PullRequestNumber
          - !Ref 'AWS::NoValue'
        - !If
          - HasPullRequestNumber
          - Name: PULL_REQUEST_DOMAIN
            Value: !Ref Domain
          - !Ref 'AWS::NoValue'
      Name: !Sub "${AWS::StackName}-docker-infra"
      TimeoutInMinutes: 5
      ServiceRole: !Sub ${DashCaseProjectName}-role-codebuild

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn:
        Fn::ImportValue: !Sub ${DashCaseProjectName}-role-codepipeline
      Name: !Sub ${AWS::StackName}
      ArtifactStore:
        Type: S3
        Location: !Sub ${AWS::AccountId}-${DashCaseProjectName}-artifacts
      Stages:
        - Name: Source
          Actions:
          - Name: App
            ActionTypeId:
              Category: Source
              Owner: ThirdParty
              Version: 1
              Provider: GitHub
            Configuration:
              Owner: !Ref GitHubOrganization
              Repo: !Ref GitHubRepo
              Branch: !Ref InfraGitBranch
              OAuthToken: !Ref GitHubToken
              PollForSourceChanges: false
            OutputArtifacts:
            - Name: App
            RunOrder: 1
        - Name: Build
          Actions:
          - Name: CloudFormation
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: 1
              Provider: CodeBuild
            Configuration:
              ProjectName: !Ref CloudFormationProject
            InputArtifacts:
            - Name: App
            OutputArtifacts:
            - Name: CloudFormationOutput
            RunOrder: 1
          - Name: InfrastructureImages
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: 1
              Provider: CodeBuild
            Configuration:
              ProjectName: !Ref DockerInfraProject
            InputArtifacts:
            - Name: App
            OutputArtifacts:
            - Name: DockerInfraOutput
            RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: TestInfrastructure
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Sub ${AWS::StackName}-test-services
                TemplatePath: !Sub CloudFormationOutput::${ECSTemplatePath}/template-services.yaml
                RoleArn:
                  Fn::ImportValue: !Sub ${DashCaseProjectName}-role-cloudformation
                TemplateConfiguration: !If [IsMasterBranch, !Ref "AWS::NoValue", "CloudFormationOutput::templates/stack-delete-4-hour-config.json"]
                # There is a maximum size limit of 1 kilobyte for the JSON object that can be stored in the ParameterOverrides property.
                ParameterOverrides: !Sub |
                  {
                      "DashCaseProjectName": "${DashCaseProjectName}",
                      "EnvironmentName" : "test",
                      "Namespace" : "test",
                      "InfraGitBranch" : "${InfraGitBranch}",
                      "InfraGitCommit" : { "Fn::GetParam" : [ "DockerInfraOutput", "docker_infra_output.json", "InfraGitCommit" ] },
                      "TemplateBucket": "${AWS::AccountId}-${DashCaseProjectName}-templates",
                      "ECSTemplatePath": "${ECSTemplatePath}",
                      "Scheme": "internet-facing"
                  }
              InputArtifacts:
                - Name: CloudFormationOutput
                - Name: DockerInfraOutput
              RunOrder: 1


Outputs:
  PipelineUrl:
    Description: The pipeline URL.
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
    Export:
      Name: !Sub Pipeline::Infra::${AWS::StackName}::PipelineUrl

  PipelineName:
    Description: The pipeline name.
    Value: !Ref Pipeline
    Export:
      Name: !Sub Pipeline::Infra::${AWS::StackName}::PipelineName
